problem_id: 4
team_id: 1
submission_time_seconds: 210
judge_id: 1612
judgement: JUDGEMENT_SUCCESS
judgement_message: "Correct Answer"
algorithmic_submission {
  file_name: "Lyft.java"
  source_code: "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Lyft {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n\n        Map<String, Integer> elevators = new HashMap<>();\n        elevators.put(\"A\", 0);\n        elevators.put(\"B\", 0);\n\n        int n = in.nextInt();\n        for (int i = 0; i < n; i++) {\n            String instruction = in.next();\n            String target = in.next();\n\n            int parameter;\n            if (instruction.charAt(3) == \'I\') {\n                parameter = in.nextInt();\n            } else {\n                parameter = elevators.get(in.next());\n            }\n\n            int oldValue = elevators.get(target);\n            instruction = instruction.substring(0, 3);\n            switch (instruction) {\n                case \"set\":\n                    elevators.put(target, wrap(parameter));\n                    break;\n                case \"add\":\n                    elevators.put(target, wrap(oldValue + parameter));\n                    break;\n                case \"sub\":\n                    elevators.put(target, wrap(oldValue - parameter));\n                    break;\n                case \"mul\":\n                    elevators.put(target, wrap(oldValue * parameter));\n                    break;\n            }\n        }\n\n        int a = elevators.get(\"A\");\n        int b = elevators.get(\"B\");\n        for (int floor = 4; floor >= 0; floor--) {\n            System.out.print(a == floor? \'#\' : \'|\');\n            System.out.print(\' \');\n            System.out.print(b == floor? \'#\' : \'|\');\n            System.out.println();\n        }\n    }\n\n    private static Integer wrap(int i) {\n        return Math.floorMod(i, 5);\n    }\n}\n"
  language: "java"
  compile_result {
    time_seconds: 1
  }
  case_results {
    key: 0
    value {
      result_out: "# |\n| |\n| |\n| |\n| #\n"
    }
  }
  case_results {
    key: 1
    value {
      result_out: "| #\n| |\n| |\n| |\n# |\n"
    }
  }
  case_results {
    key: 2
    value {
      result_out: "| |\n| |\n| |\n| |\n# #\n"
    }
  }
  case_results {
    key: 3
    value {
      result_out: "| |\n| |\n| |\n| |\n# #\n"
    }
  }
  case_results {
    key: 4
    value {
      result_out: "| #\n# |\n| |\n| |\n| |\n"
    }
  }
  preliminary_judgement: JUDGEMENT_SUCCESS
  preliminary_judgement_message: "Correct Answer"
}
